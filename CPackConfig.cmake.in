
set (CPACK_PACKAGE_CONTACT "eriksohns@123mail.org")

#set (CPACK_ALL_INSTALL_TYPES Full Developer)
#set (CPACK_COMPONENT_APPLICATIONS_INSTALL_TYPES Full)
#set (CPACK_COMPONENT_HEADERS_INSTALL_TYPES Developer Full)
#set (CPACK_COMPONENT_LIBRARIES_INSTALL_TYPES Developer Full)

set (CPACK_INSTALL_CMAKE_PROJECTS "@PROJECT_SOURCE_DIR@/cmake;@PROJECT_NAME@;ALL;/")

set (CPACK_NSIS_DISPLAY_NAME "@PROJECT_NAME@")

set (CPACK_OUTPUT_CONFIG_FILE "release/CPackConfig.cmake")

set (CPACK_PACKAGE_DESCRIPTION_FILE "@PROJECT_SOURCE_DIR@/README")
set (CPACK_PACKAGE_DESCRIPTION_SUMMARY "@PROJECT_NAME@ is a streaming library")
set (CPACK_PACKAGE_EXECUTABLES "camsource;camtarget")
set (CPACK_PACKAGE_FILE_NAME "camstream")
set (CPACK_PACKAGE_INSTALL_DIRECTORY "$PROGRAMFILES64@PROJECT_NAME@/${CPACK_PACKAGE_FILE_NAME}")
set (CPACK_PACKAGE_INSTALL_REGISTRY_KEY "@PROJECT_NAME@")
set (CPACK_PACKAGE_NAME "@PROJECT_NAME@")
set (CPACK_PACKAGE_VENDOR "")
set (CPACK_PACKAGE_VERSION "@VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_MICRO@")
set (CPACK_PACKAGE_VERSION_MAJOR @VERSION_MAJOR@)
set (CPACK_PACKAGE_VERSION_MINOR @VERSION_MINOR@)
set (CPACK_PACKAGE_VERSION_PATCH @VERSION_MICRO@)

set (CPACK_RESOURCE_FILE_LICENSE "@PROJECT_SOURCE_DIR@/LICENSE")
set (CPACK_RESOURCE_FILE_README "@PROJECT_SOURCE_DIR@/README")
set (CPACK_RESOURCE_FILE_WELCOME "")


if (UNIX)
 set (CPACK_SYSTEM_NAME "Linux")

 set (CPACK_TOPLEVEL_TAG "Linux-i686")
endif ()

if (UNIX)
# set (CPACK_SOURCE_GENERATOR "TGZ;TZ")
 set (CPACK_SOURCE_GENERATOR "TGZ")

 if ("${CPACK_SOURCE_GENERATOR}" STREQUAL "TGZ")
  set (CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}.@CMAKE_SYSTEM_PROCESSOR@)
 endif ("${CPACK_SOURCE_GENERATOR}" STREQUAL "TGZ")
endif ()

set (CPACK_SOURCE_OUTPUT_CONFIG_FILE "@PROJECT_SOURCE_DIR@/release/CPackSourceConfig.cmake")
set (CPACK_SOURCE_PACKAGE_FILE_NAME "@CPACK_PACKAGE_NAME@-@VERSION@")
set (CPACK_SOURCE_STRIP_FILES "")

set (CPACK_STRIP_FILES "bin/camsource;bin/camtarget")

################################################################################

if (UNIX)
 set (CPACK_CMAKE_GENERATOR "Unix Makefiles")

# set (CPACK_GENERATOR "STGZ;TGZ;TZ")
 set (CPACK_GENERATOR "DEB")

 if ("${CPACK_GENERATOR}" STREQUAL "DEB")
  set (CPACK_COMPONENTS_ALL ${CPACK_COMPONENTS_ALL} Debian)
  set (CPACK_DEBIAN_PACKAGE_MAINTAINER ${CPACK_PACKAGE_CONTACT})
  set (CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE})
 endif ("${CPACK_GENERATOR}" STREQUAL "DEB")

 if ("${CPACK_GENERATOR}" STREQUAL "RPM")
  set (CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}.${CPACK_RPM_PACKAGE_ARCHITECTURE})
 endif ("${CPACK_GENERATOR}" STREQUAL "RPM")
endif ()

if (WIN32 AND NOT UNIX)
 set (CPACK_CMAKE_GENERATOR "Visual Studio 14 2015")

 set (CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION OFF)

 set (CPACK_GENERATOR "NSIS")

 # There is a bug in NSI that does not handle full unix paths properly. Make
 # sure there is at least one set of four (4) backslashes.
 set (CPACK_PACKAGE_ICON "@PROJECT_SOURCE_DIR@/include\\\\libacestream_icon.png")

 # The default installation directory presented to the end user by the NSIS installer
 set (CPACK_NSIS_INSTALL_ROOT "${PROGRAMFILES64}")

 # Title displayed at the top of the installer
 set (CPACK_NSIS_PACKAGE_NAME "@PROJECT_NAME@ @VERSION_MAJOR@.@VERSION_MINOR@")

 set (CPACK_NSIS_PAGE_COMPONENTS " ")

 #set (CPACK_NSIS_MUI_FINISHPAGE_RUN ${PROJECT_EXE})
 
 set (CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\camsource.exe")
 set (CPACK_NSIS_DISPLAY_NAME "@PROJECT_NAME@")
 set (CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.github.com\\\\esohns\\\\@PROJECT_NAME@")
 set (CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.github.com\\\\esohns\\\\@PROJECT_NAME@")
 set (CPACK_NSIS_CONTACT ${CPACK_PACKAGE_CONTACT})
 set (CPACK_NSIS_MODIFY_PATH ON)
endif (WIN32 AND NOT UNIX)
