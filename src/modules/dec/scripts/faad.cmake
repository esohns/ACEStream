set (FAAD_SUPPORT_DEFAULT ON)
if (UNIX)
 include (FindPkgConfig)
 pkg_check_modules (PKG_FAAD faad2)
 if (PKG_FAAD_FOUND)
  set (FAAD_FOUND TRUE)
  set (faad_INCLUDE_DIRS "${PKG_FAAD_INCLUDE_DIRS}")
  set (faad_LIBRARIES "${PKG_FAAD_LIBRARIES}")
 endif (PKG_FAAD_FOUND)
elseif (WIN32)
 if (VCPKG_USE)
#  cmake_policy (SET CMP0074 OLD)
#  find_package (faad2 CONFIG)
  find_library (FAAD_LIBRARY faad.lib
                PATHS ${VCPKG_LIB_DIR}
                PATH_SUFFIXES lib
                DOC "searching for faad.lib"
                NO_DEFAULT_PATH)
  if (FAAD_LIBRARY)
   set (FAAD_FOUND TRUE)
   set (faad_INCLUDE_DIRS ${VCPKG_INCLUDE_DIR_BASE})
   set (faad_LIBRARIES "${FAAD_LIBRARY}")
   set (faad_LIB_DIR ${VCPKG_LIB_DIR}/bin)
  endif (FAAD_LIBRARY)
 endif (VCPKG_USE)
 if (NOT FAAD_FOUND)
  set (FAAD_LIB_FILE "libfaad2_dll.lib")
  find_library (FAAD_LIBRARY ${FAAD_LIB_FILE}
                PATHS $ENV{LIB_ROOT}/faad2/project/msvc/bin
                PATH_SUFFIXES ${CMAKE_BUILD_TYPE}
                DOC "searching for ${FAAD_LIB_FILE}"
                NO_DEFAULT_PATH)
  if (NOT FAAD_LIBRARY)
   message (WARNING "could not find ${FAAD_LIB_FILE}, continuing")
  else ()
   message (STATUS "Found ${FAAD_LIB_FILE} library \"${FAAD_LIBRARY}\"")
   set (FAAD_FOUND TRUE)
   set (faad_INCLUDE_DIRS "$ENV{LIB_ROOT}/faad2/include")
   set (faad_LIBRARIES "${FAAD_LIBRARY}")
   set (faad_LIB_DIR "$ENV{LIB_ROOT}/faad2/project/msvc/bin/${CMAKE_BUILD_TYPE}")
  endif (NOT FAAD_LIBRARY)
 endif (NOT FAAD_FOUND)
endif ()
if (FAAD_FOUND)
 option (FAAD_SUPPORT "enable faad2 support" ${FAAD_SUPPORT_DEFAULT})
 if (FAAD_SUPPORT)
  add_definitions (-DFAAD_SUPPORT)
#  include_directories (${faad_INCLUDE_DIRS})
 endif (FAAD_SUPPORT)
endif (FAAD_FOUND)
