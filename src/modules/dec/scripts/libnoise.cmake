set (LIBNOISE_SUPPORT_DEFAULT ON)
if (UNIX)
 set (LIBNOISE_DIR "$ENV{LIB_ROOT}/libnoise")
 set (LIBNOISE_INCLUDE_DIRS "${LIBNOISE_DIR}/include")
 set (LIBNOISE_LIBRARY "libnoise.so")
 find_library (LIBNOISE_LIB ${LIBNOISE_LIBRARY}
               PATHS ${LIBNOISE_DIR}
               PATH_SUFFIXES build/gcc
               DOC "searching for ${LIBNOISE_LIBRARY}"
               NO_DEFAULT_PATH)
 if (NOT LIBNOISE_LIB)
  message (WARNING "could not find ${LIBNOISE_LIBRARY}, continuing")
 else ()
  message (STATUS "Found ${LIBNOISE_LIBRARY} library \"${LIBNOISE_LIB}\"")
  set (LIBNOISE_FOUND TRUE)
 endif (NOT LIBNOISE_LIB)
elseif (WIN32)
 if (VCPKG_USE)
#  cmake_policy (SET CMP0074 OLD)
  find_package (libnoise CONFIG)
  if (libnoise_FOUND)
   set (LIBNOISE_FOUND TRUE)
   set (LIBNOISE_INCLUDE_DIRS ${VCPKG_INCLUDE_DIR_BASE})
   set (LIBNOISE_LIB_DIR ${VCPKG_LIB_DIR}/bin)
  endif (libnoise_FOUND)
 endif (VCPKG_USE)
 if (NOT LIBNOISE_FOUND)
  set (LIBNOISE_DIR "$ENV{LIB_ROOT}/libnoise")
  set (LIBNOISE_INCLUDE_DIRS "${LIBNOISE_DIR}/include")
  set (LIBNOISE_LIBRARY "libnoise.lib")
  find_library (LIBNOISE_LIB ${LIBNOISE_LIBRARY}
                PATHS ${LIBNOISE_DIR}
                PATH_SUFFIXES build/msvc/${CMAKE_BUILD_TYPE}
                DOC "searching for ${LIBNOISE_LIBRARY}"
                NO_DEFAULT_PATH)
  if (NOT LIBNOISE_LIB)
   message (WARNING "could not find ${LIBNOISE_LIBRARY}, continuing")
  else ()
   message (STATUS "found ${LIBNOISE_LIBRARY} library \"${LIBNOISE_LIB}\"")
   set (LIBNOISE_FOUND TRUE)
   set (LIBNOISE_LIB_DIR "${LIBNOISE_DIR}/build/msvc/${CMAKE_BUILD_TYPE}")
  endif (NOT LIBNOISE_LIB)
 endif (NOT LIBNOISE_FOUND)
endif ()
if (LIBNOISE_FOUND)
 option (LIBNOISE_SUPPORT "enable libnoise support" ${LIBNOISE_SUPPORT_DEFAULT})
 if (LIBNOISE_SUPPORT)
  add_definitions (-DLIBNOISE_SUPPORT)
 endif (LIBNOISE_SUPPORT)
endif (LIBNOISE_FOUND)
