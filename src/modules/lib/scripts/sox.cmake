set (SOX_SUPPORT_DEFAULT ON)
if (UNIX)
 pkg_check_modules (PKG_SOX sox)
 if (PKG_SOX_FOUND)
  set (SOX_FOUND TRUE)
  set (SOX_INCLUDE_DIRS "${PKG_SOX_INCLUDE_DIRS}")
  set (SOX_LIBRARIES "${PKG_SOX_LIBRARIES}")
 endif (PKG_SOX_FOUND)
elseif (WIN32)
 if (VCPKG_SUPPORT)
#  cmake_policy (SET CMP0074 OLD)
  find_package (sox CONFIG)
  if (sox_FOUND)
   set (SOX_FOUND TRUE)
   if (CMAKE_BUILD_TYPE STREQUAL "Debug" OR
       CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    set (sox_LIB_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}/debug/bin")
   else ()
    set (sox_LIB_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}/bin")
   endif ()
  endif (sox_FOUND)
 else ()
  find_library (SOX_LIBRARY sox.lib
                PATHS $ENV{LIB_ROOT}/sox
                PATH_SUFFIXES lib
                DOC "searching for sox.lib"
                NO_DEFAULT_PATH)
  if (NOT SOX_LIBRARY)
   message (WARNING "could not find sox.lib, continuing")
  else ()
   message (STATUS "Found sox.lib library \"${SOX_LIBRARY}\"")
   set (SOX_FOUND TRUE)
   set (sox_INCLUDE_DIRS "$ENV{LIB_ROOT}/sox/include")
   set (sox_LIBRARIES "${SOX_LIBRARY}")
   set (sox_LIB_DIR "$ENV{LIB_ROOT}/sox/bin")
  endif (NOT SOX_LIBRARY)
 endif (VCPKG_SUPPORT)
endif ()
if (SOX_FOUND)
 option (SOX_SUPPORT "enable sox support" ${SOX_SUPPORT_DEFAULT})
 if (SOX_SUPPORT)
  add_definitions (-DSOX_SUPPORT)
#  include_directories (${sox_INCLUDE_DIRS})
 endif (SOX_SUPPORT)
endif (SOX_FOUND)
