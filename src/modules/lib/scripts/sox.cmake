set (SOX_SUPPORT_DEFAULT ON)
if (UNIX)
 pkg_check_modules (PKG_SOX sox)
 if (PKG_SOX_FOUND)
  set (SOX_FOUND TRUE)
  set (SOX_INCLUDE_DIRS "${PKG_SOX_INCLUDE_DIRS}")
  set (SOX_LIBRARIES "${PKG_SOX_LIBRARIES}")
 endif (PKG_SOX_FOUND)
elseif (WIN32)
 if (VCPKG_USE)
#  cmake_policy (SET CMP0074 OLD)
  find_package (sox CONFIG)
  if (sox_FOUND)
   set (SOX_FOUND TRUE)
   set (SOX_INCLUDE_DIRS "${sox_INCLUDE_DIRS}")
   set (SOX_LIBRARIES "${sox_LIBRARIES}")
   set (SOX_LIB_DIR ${VCPKG_LIB_DIR}/bin)
  endif (sox_FOUND)
 endif (VCPKG_USE)
 if (NOT SOX_FOUND)
  set (PATH_SUFFIX "Release")
  if (DEFINED CMAKE_BUILD_TYPE)
   set (PATH_SUFFIX ${CMAKE_BUILD_TYPE})
  endif (DEFINED CMAKE_BUILD_TYPE)
  find_library (SOX_LIBRARY libsox.lib
                PATHS $ENV{LIB_ROOT}/sox/build/src
                PATH_SUFFIXES ${PATH_SUFFIX}
                DOC "searching for libsox.lib"
                NO_DEFAULT_PATH)
  if (NOT SOX_LIBRARY)
   message (WARNING "could not find libsox.lib, continuing")
  else ()
   message (STATUS "Found libsox.lib library \"${SOX_LIBRARY}\"")
   set (SOX_FOUND TRUE)
   set (SOX_INCLUDE_DIRS "$ENV{LIB_ROOT}/sox/src")
   set (SOX_LIBRARIES "${SOX_LIBRARY}")
   set (SOX_LIB_DIR "$ENV{LIB_ROOT}/sox/build/src/${PATH_SUFFIX}")
  endif (NOT SOX_LIBRARY)
 endif (NOT SOX_FOUND)
endif ()
if (SOX_FOUND)
 option (SOX_SUPPORT "enable sox support" ${SOX_SUPPORT_DEFAULT})
 if (SOX_SUPPORT)
  add_definitions (-DSOX_SUPPORT)
 endif (SOX_SUPPORT)
endif (SOX_FOUND)
