set (LIBCAMERA_SUPPORT_DEFAULT ON)
if (UNIX)
 pkg_check_modules (PKG_LIBCAMERA libcamera)
 if (PKG_LIBCAMERA_FOUND)
  set (LIBCAMERA_FOUND TRUE)
  set (LIBCAMERA_INCLUDE_DIRS "${PKG_LIBCAMERA_INCLUDE_DIRS}")
  set (LIBCAMERA_LIBRARIES "${PKG_LIBCAMERA_LIBRARIES}")
 else ()
  find_library (LIBCAMERA_LIBRARY libcamera.so
                PATHS /usr/local
                PATH_SUFFIXES lib64
                DOC "searching for libcamera.so"
                NO_DEFAULT_PATH)
  if (LIBCAMERA_LIBRARY)
   set (LIBCAMERA_FOUND TRUE)
   set (LIBCAMERA_INCLUDE_DIRS "/usr/local/include/libcamera")
   set (LIBCAMERA_LIBRARIES "${LIBCAMERA_LIBRARY}")
  endif (LIBCAMERA_LIBRARY)
 endif (PKG_LIBCAMERA_FOUND)
elseif (WIN32)
 if (VCPKG_SUPPORT)
#  cmake_policy (SET CMP0074 OLD)
  find_package (libcamera CONFIG)
  if (libcamera_FOUND)
   set (LIBCAMERA_FOUND TRUE)
   if (CMAKE_BUILD_TYPE STREQUAL "Debug" OR
       CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    set (LIBCAMERA_LIB_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}/debug/bin")
   else ()
    set (LIBCAMERA_LIB_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}/bin")
   endif ()
  endif (libcamera_FOUND)
 else ()
  find_library (LIBCAMERA_LIBRARY libcamera.lib
                PATHS $ENV{LIB_ROOT}/libcamera
                PATH_SUFFIXES lib
                DOC "searching for libcamera.lib"
                NO_DEFAULT_PATH)
  if (NOT LIBCAMERA_LIBRARY)
   message (WARNING "could not find libcamera.lib, continuing")
  else ()
   message (STATUS "Found libcamera.lib library \"${LIBCAMERA_LIBRARY}\"")
   set (LIBCAMERA_FOUND TRUE)
   set (LIBCAMERA_INCLUDE_DIRS "$ENV{LIB_ROOT}/libcamera/include")
   set (LIBCAMERA_LIBRARIES "${LIBCAMERA_LIBRARY}")
   set (LIBCAMERA_LIB_DIR "$ENV{LIB_ROOT}/libcamera/bin")
  endif (NOT LIBCAMERA_LIBRARY)
 endif (VCPKG_SUPPORT)
endif ()
if (LIBCAMERA_FOUND)
 option (LIBCAMERA_SUPPORT "enable libcamera support" ${LIBCAMERA_SUPPORT_DEFAULT})
 if (LIBCAMERA_SUPPORT)
  add_definitions (-DLIBCAMERA_SUPPORT)
#  include_directories (${LIBCAMERA_INCLUDE_DIRS})
 endif (LIBCAMERA_SUPPORT)
endif (LIBCAMERA_FOUND)
