set (LIBPIPEWIRE_SUPPORT_DEFAULT ON)
if (UNIX)
 pkg_check_modules (PKG_LIBPIPEWIRE libpipewire-0.3)
 if (PKG_LIBPIPEWIRE_FOUND)
  set (LIBPIPEWIRE_FOUND TRUE)
  set (LIBPIPEWIRE_INCLUDE_DIRS "${PKG_LIBPIPEWIRE_INCLUDE_DIRS}")
  set (LIBPIPEWIRE_LIBRARIES "${PKG_LIBPIPEWIRE_LIBRARIES}")
 else ()
  find_library (LIBPIPEWIRE_LIBRARY libpipewire.so
                PATHS /usr/local
                PATH_SUFFIXES lib64
                DOC "searching for libpipewire.so"
                NO_DEFAULT_PATH)
  if (LIBPIPEWIRE_LIBRARY)
   set (LIBPIPEWIRE_FOUND TRUE)
   set (LIBPIPEWIRE_INCLUDE_DIRS "/usr/local/include/libpipewire")
   set (LIBPIPEWIRE_LIBRARIES "${LIBPIPEWIRE_LIBRARY}")
  endif (LIBPIPEWIRE_LIBRARY)
 endif (PKG_LIBPIPEWIRE_FOUND)
elseif (WIN32)
 if (VCPKG_USE)
#  cmake_policy (SET CMP0074 OLD)
  find_package (libpipewire CONFIG)
  if (libpipewire_FOUND)
   set (LIBPIPEWIRE_FOUND TRUE)
   set (LIBPIPEWIRE_INCLUDE_DIRS ${VCPKG_INCLUDE_DIR})
#   set (LIBPIPEWIRE_LIBRARIES "${libpipewire_LIBRARIES}")
   set (LIBPIPEWIRE_LIB_DIR ${VCPKG_BIN_DIR})
  endif (libpipewire_FOUND)
 endif (VCPKG_USE)
# if (NOT LIBPIPEWIRE_FOUND)
#  find_library (LIBPIPEWIRE_LIBRARY libpipewire.lib
#                PATHS $ENV{LIB_ROOT}/libpipewire/build/src
#                PATH_SUFFIXES libpipewire
#                DOC "searching for libpipewire.lib"
#                NO_DEFAULT_PATH)
#  if (NOT LIBPIPEWIRE_LIBRARY)
#   message (WARNING "could not find libpipewire.lib, continuing")
#  else ()
#   message (STATUS "Found libpipewire.lib library \"${LIBPIPEWIRE_LIBRARY}\"")
#   set (LIBPIPEWIRE_FOUND TRUE)
#   set (LIBPIPEWIRE_INCLUDE_DIRS "$ENV{LIB_ROOT}/libpipewire/include")
#   set (LIBPIPEWIRE_LIBRARIES "${LIBPIPEWIRE_LIBRARY}")
#   set (LIBPIPEWIRE_LIB_DIR "$ENV{LIB_ROOT}/libpipewire/build/src/libpipewire")
#  endif (NOT LIBPIPEWIRE_LIBRARY)
# endif (NOT LIBPIPEWIRE_FOUND)
endif ()
if (LIBPIPEWIRE_FOUND)
 option (LIBPIPEWIRE_SUPPORT "enable libpipewire support" ${LIBPIPEWIRE_SUPPORT_DEFAULT})
 if (LIBPIPEWIRE_SUPPORT)
  add_definitions (-DLIBPIPEWIRE_SUPPORT)
#  include_directories (${LIBPIPEWIRE_INCLUDE_DIRS})
 endif (LIBPIPEWIRE_SUPPORT)
endif (LIBPIPEWIRE_FOUND)
