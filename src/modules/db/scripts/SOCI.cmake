set (SOCI_SUPPORT_DEFAULT ON)
if (UNIX)
 include (FindPkgConfig)
 pkg_check_modules (PKG_SOCI soci)
 if (PKG_SOCI_FOUND)
  set (SOCI_FOUND TRUE)
  set (SOCI_INCLUDE_DIRS "${PKG_SOCI_INCLUDE_DIRS}")
  set (SOCI_LIBRARIES "${PKG_SOCI_LIBRARIES}")
  set (SOCI_LINK_DIRS "${PKG_SOCI_LIBRARY_DIRS}")
 else ()
  set (SOCI_LIB_FILE libsoci_core.so)
  find_library (SOCI_LIBRARY ${SOCI_LIB_FILE}
                PATHS /usr/lib64
                PATH_SUFFIXES soci
                DOC "searching for ${SOCI_LIB_FILE}")
  if (SOCI_LIBRARY)
   set (SOCI_FOUND TRUE)
   set (SOCI_INCLUDE_DIRS "/usr/include/soci")
   set (SOCI_LIBRARIES "${SOCI_LIBRARY}")
  endif (SOCI_LIBRARY)
 endif (PKG_SOCI_FOUND)
elseif (WIN32)
 if (VCPKG_SUPPORT)
#  cmake_policy (SET CMP0074 OLD)
  find_package (soci CONFIG)
  if (soci_FOUND)
   set (SOCI_FOUND TRUE)
   if (CMAKE_BUILD_TYPE STREQUAL "Debug" OR
       CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    set (SOCI_LIB_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}/debug/bin")
   else ()
    set (SOCI_LIB_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}/bin")
   endif ()
  endif (soci_FOUND)
 endif (VCPKG_SUPPORT)
 if (NOT SOCI_FOUND)
  set (SOCI_VERSION "4_2")
  set (SOCI_LIB_FILE soci_core_${SOCI_VERSION}.lib)
  find_library (SOCI_LIBRARY ${SOCI_LIB_FILE}
                PATHS $ENV{LIB_ROOT}/soci/build/msvc/lib
                PATH_SUFFIXES ${CMAKE_BUILD_TYPE}
                DOC "searching for ${SOCI_LIB_FILE}"
                NO_DEFAULT_PATH)
  if (NOT SOCI_LIBRARY)
   message (WARNING "could not find ${SOCI_LIB_FILE}, continuing")
  else ()
   message (STATUS "Found ${SOCI_LIB_FILE} library \"${SOCI_LIBRARY}\"")
  endif (NOT SOCI_LIBRARY)
  set (SOCI_MYSQL_LIB_FILE soci_mysql_${SOCI_VERSION}.lib)
  find_library (SOCI_MYSQL_LIBRARY ${SOCI_MYSQL_LIB_FILE}
                PATHS $ENV{LIB_ROOT}/soci/build/msvc/lib
                PATH_SUFFIXES ${CMAKE_BUILD_TYPE}
                DOC "searching for ${SOCI_MYSQL_LIB_FILE}"
                NO_DEFAULT_PATH)
  if (NOT SOCI_MYSQL_LIBRARY)
   message (WARNING "could not find ${SOCI_MYSQL_LIB_FILE}, continuing")
  else ()
   message (STATUS "Found ${SOCI_MYSQL_LIB_FILE} library \"${SOCI_MYSQL_LIBRARY}\"")
  endif (NOT SOCI_MYSQL_LIBRARY)
  if (SOCI_LIBRARY AND SOCI_MYSQL_LIBRARY)
   set (SOCI_FOUND TRUE)
   set (SOCI_INCLUDE_DIRS "$ENV{LIB_ROOT}/soci/include;$ENV{LIB_ROOT}/soci/build/msvc/include")
   set (SOCI_LIBRARIES "${SOCI_LIBRARY};${SOCI_MYSQL_LIBRARY}")
   set (SOCI_LIB_DIR "$ENV{LIB_ROOT}/soci/build/msvc/bin/${CMAKE_BUILD_TYPE}")
  endif (SOCI_LIBRARY AND SOCI_MYSQL_LIBRARY)
 endif (NOT SOCI_FOUND)
endif ()
if (SOCI_FOUND)
 option (SOCI_SUPPORT "enable SOCI support" ${SOCI_SUPPORT_DEFAULT})
 if (SOCI_SUPPORT)
  add_definitions (-DSOCI_SUPPORT)
#  include_directories (${SOCI_INCLUDE_DIRS})
 endif (SOCI_SUPPORT)
endif (SOCI_FOUND)
