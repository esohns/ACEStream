set (MEDIAPIPE_SUPPORT_DEFAULT ON)
if (UNIX)
# set (ENV{PKG_CONFIG_PATH} "/usr/local/lib/pkgconfig:$ENV{PKG_CONFIG_PATH}")
 pkg_check_modules (PKG_MEDIAPIPE mediapipe)
 if (PKG_MEDIAPIPE_FOUND)
  set (MEDIAPIPE_FOUND TRUE)
  set (MEDIAPIPE_INCLUDE_DIRS "${PKG_MEDIAPIPE_INCLUDE_DIRS}")
  set (MEDIAPIPE_LIBRARIES "${PKG_MEDIAPIPE_LIBRARIES}")
 else ()
  set (MEDIAPIPE_ROOT $ENV{LIB_ROOT}/mediapipe)
  find_library (MEDIAPIPE_LIBRARY libmp.so
                PATHS ${MEDIAPIPE_ROOT}
                PATH_SUFFIXES bazel-bin/mediapipe/examples/desktop/libmp
                DOC "searching for libmp.so"
                NO_DEFAULT_PATH)
  if (NOT MEDIAPIPE_LIBRARY)
   message (WARNING "could not find libmp.so, continuing")
  else ()
   message (STATUS "Found libmp.so library \"${MEDIAPIPE_LIBRARY}\"")
  endif (NOT MEDIAPIPE_LIBRARY)
  if (MEDIAPIPE_LIBRARY)
   set (MEDIAPIPE_FOUND TRUE)
   set (MEDIAPIPE_LIBRARIES "${MEDIAPIPE_LIBRARY}")
   set (MEDIAPIPE_INCLUDE_DIRS "${MEDIAPIPE_ROOT}/bazel-mediapipe/external/com_google_protobuf/src;${MEDIAPIPE_ROOT}/bazel-bin;${MEDIAPIPE_ROOT}/mediapipe/examples/desktop/libmp")
#   set (MEDIAPIPE_LIB_DIR "/usr/local/lib")
  endif (MEDIAPIPE_LIBRARY)
 endif (PKG_MEDIAPIPE_FOUND)
elseif (WIN32)
 if (VCPKG_USE)
#  cmake_policy (SET CMP0074 OLD)
  find_package (mediapipe CONFIG)
  if (MEDIAPIPE_FOUND)
   set (MEDIAPIPE_FOUND TRUE)
   set (MEDIAPIPE_INCLUDE_DIRS ${VCPKG_INCLUDE_DIR})
   set (MEDIAPIPE_LIBRARIES ${VCPKG_LIB_DIR}/libMEDIAPIPE.lib)
   set (MEDIAPIPE_LIB_DIR "${VCPKG_BIN_DIR}")
  endif (MEDIAPIPE_FOUND)
 endif (VCPKG_USE)
 if (NOT MEDIAPIPE_FOUND)
  if (EXISTS $ENV{MEDIAPIPE_ROOT})
   set (MEDIAPIPE_ROOT $ENV{MEDIAPIPE_ROOT})
  else ()
   set (MEDIAPIPE_ROOT $ENV{LIB_ROOT}/mediapipe)
  endif (EXISTS $ENV{MEDIAPIPE_ROOT})
  file (TO_CMAKE_PATH "${MEDIAPIPE_ROOT}" MEDIAPIPE_ROOT)
  find_library (MEDIAPIPE_LIBRARY libmp.dll.if.lib
                PATHS ${MEDIAPIPE_ROOT}
                PATH_SUFFIXES bazel-bin/mediapipe/examples/desktop/libmp
                DOC "searching for libmp.dll.if.lib"
                NO_DEFAULT_PATH)
  if (NOT MEDIAPIPE_LIBRARY)
   message (WARNING "could not find libmp.dll.if.lib, continuing")
  else ()
   message (STATUS "Found libmp.dll.if.lib library \"${MEDIAPIPE_LIBRARY}\"")
  endif (NOT MEDIAPIPE_LIBRARY)
  if (MEDIAPIPE_LIBRARY)
   set (MEDIAPIPE_FOUND TRUE)
   set (MEDIAPIPE_LIBRARIES "${MEDIAPIPE_LIBRARY}")
   set (MEDIAPIPE_INCLUDE_DIRS "${MEDIAPIPE_ROOT}/bazel-mediapipe/external/com_google_protobuf/src;${MEDIAPIPE_ROOT}/bazel-bin;${MEDIAPIPE_ROOT}/mediapipe/examples/desktop/libmp")
   set (MEDIAPIPE_LIB_DIR "${MEDIAPIPE_ROOT}/bazel-bin/mediapipe/examples/desktop/libmp")
  endif (MEDIAPIPE_LIBRARY)
 endif (NOT MEDIAPIPE_FOUND)
endif ()
if (MEDIAPIPE_FOUND)
 option (MEDIAPIPE_SUPPORT "enable mediapipe support" ${MEDIAPIPE_SUPPORT_DEFAULT})
 if (MEDIAPIPE_SUPPORT)
  add_definitions (-DMEDIAPIPE_SUPPORT)
#  include_directories (${MEDIAPIPE_INCLUDE_DIRS})
 endif (MEDIAPIPE_SUPPORT)
endif (MEDIAPIPE_FOUND)
