#version 130

uniform vec2 iResolution;
uniform sampler2D iChannel0; // buffer B

float
getVal (vec2 uv)
{
  return length(texture(iChannel0, uv).xyz);
}
    
vec2
getGrad (vec2 uv, float delta)
{
  vec2 d = vec2(delta, 0);
  return vec2(
    getVal(uv + d.xy) - getVal(uv - d.xy),
    getVal(uv + d.yx) - getVal(uv - d.yx)
  ) / delta;
}

void
main ()
{
  vec2 uv = gl_FragCoord.xy / iResolution.xy;
  vec3 n = vec3(getGrad(uv, 2. / iResolution.y), 150.0);
  //n *= n;
  n = normalize(n);
  //gl_FragColor = vec4(n, 1);
  vec3 light = normalize(vec3(1, 1, 2));
  float diff = clamp(dot(n, light), 0.5, 1.0);
  float spec = clamp(dot(reflect(light, n), vec3(0, 0, -1)), 0.0, 1.0);
  spec = pow(spec, 20.0);
  gl_FragColor = mix(texture(iChannel0, uv), vec4(1), spec / (diff + spec));
  gl_FragColor.w = 1.;
}
